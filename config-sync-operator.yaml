apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: configmanagements.configmanagement.gke.io
spec:
  group: configmanagement.gke.io
  names:
    kind: ConfigManagement
    plural: configmanagements
  preserveUnknownFields: true
  scope: Cluster
  versions:
    - name: v1
      served: true
      storage: true
  validation:
    openAPIV3Schema:
      description: ConfigManagement is the Schema for the ConfigManagement API.
      type: object
      required:
        - metadata
        - spec
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConfigManagementSpec defines the desired state of ConfigManagement.
          type: object
          properties:
            channel:
              description: 'Channel specifies a channel that can be used to resolve a specific addon, eg: stable It will be ignored if Version is specified'
              type: string
            clusterName:
              description: ClusterName, if defined, sets the name for this cluster.  If unset, the cluster is considered to be unnamed, and cannot use ClusterSelectors.
              type: string
            enableLegacyFields:
              description: EnableLegacyFields instructs the operator to use spec.git for generating a RootSync resource in MultiRepo mode. Note that this should only be set to true if spec.enableMultiRepo is set to true.
              type: boolean
            enableMultiRepo:
              description: EnableMultiRepo instructs the operator to enable Multi Repo mode for Config Sync.
              type: boolean
            git:
              description: Git contains configuration specific to importing policies from a Git repo.
              type: object
              properties:
                gcpServiceAccountEmail:
                  description: 'GCPServiceAccountEmail specifies the GCP service account used to annotate the Config Sync Kubernetes Service Account. Note: The field is used when secretType: gcpServiceAccount.'
                  type: string
                policyDir:
                  description: 'PolicyDir is the absolute path of the directory that contains the local policy.  Default: the root directory of the repo.'
                  type: string
                proxy:
                  description: Proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of ("cookiefile", "none").  Optional.
                  type: object
                  properties:
                    httpProxy:
                      description: HTTPProxy defines a HTTP_PROXY env variable used to access the Git repo.  If both HTTPProxy and HTTPSProxy are specified, HTTPProxy will be ignored. Optional.
                      type: string
                    httpsProxy:
                      description: HTTPSProxy defines a HTTPS_PROXY env variable used to access the Git repo.  If both HTTPProxy and HTTPSProxy are specified, HTTPProxy will be ignored. Optional.
                      type: string
                secretType:
                  description: SecretType is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. Required. The validation of this is case-sensitive.
                  type: string
                  pattern: ^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$
                syncBranch:
                  description: 'SyncBranch is the branch to sync from.  Default: "master".'
                  type: string
                syncRepo:
                  type: string
                  pattern: ^(((https?|git|ssh):\/\/)|git@)
                syncRev:
                  description: 'SyncRev is the git revision (tag or hash) to check out. Default: HEAD.'
                  type: string
                syncWait:
                  description: 'SyncWaitSeconds is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note that SyncWaitSecs is not a time.Duration on purpose. This provides a reminder to developers that customers specify this value using using integers like "3" in their ConfigManagement YAML. However, time.Duration is at a nanosecond granularity, and it''s easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa).'
                  type: integer
            hierarchyController:
              description: Hierarchy Controller enables HierarchyController components as recognized by the "hierarchycontroller.configmanagement.gke.io" label set to "true".
              type: object
              properties:
                enableHierarchicalResourceQuota:
                  description: 'HierarchicalResourceQuota enforces resource quota in a hierarchical fashion: a resource quota set for one namespace provides constraints that limit aggregate resource consumption for that namespace and all its descendants. Disabling this will not delete user created hrq CRs, but will delete all the intermediate resources created by HRQ (specifically the resource quota singletons), which are labeled with hierarchycontroller.configmanagement.gke.io/hrq for easier cleanup.'
                  type: boolean
                enablePodTreeLabels:
                  description: PodTreeLabels copies the tree labels from namespaces to pods, allowing any system that uses pod logs (such as Stackdriver logging) to inspect the hierarchy.
                  type: boolean
                enabled:
                  description: 'Enable or disable the Hierarchy Controller.  Default: false.'
                  type: boolean
            sourceFormat:
              description: "SourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. \n Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. \n The validation of this is case-sensitive."
              type: string
              pattern: ^(hierarchy|unstructured|)$
            version:
              description: Version specifies the exact addon version to be deployed, eg 1.2.3 It should not be specified if Channel is specified
              type: string
        status:
          description: ConfigManagementStatus defines the observed state of ConfigManagement.
          type: object
          required:
            - healthy
          properties:
            configManagementVersion:
              description: ConfigManagementVersion is the semantic version number of the config management system enforced by the currently running config management operator.
              type: string
            errors:
              type: array
              items:
                type: string
            healthy:
              type: boolean
            phase:
              type: string
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# The Nomos system creates RBAC rules, so it requires
# full cluster-admin access. Thus, the operator needs
# to be able to grant tha permission to the installed
# Nomos components.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: config-management-operator
  name: config-management-operator
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: config-management-operator
  name: config-management-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: config-management-operator
subjects:
- kind: ServiceAccount
  name: config-management-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: config-management-operator
  name: config-management-operator
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-management-operator
  namespace: kube-system
  labels:
    k8s-app: config-management-operator
spec:
  strategy:
    type: Recreate
    # must be null due to 3-way merge, as
    # rollingUpdate added to the resource by default by the APIServer
    rollingUpdate: null
  selector:
    matchLabels:
      k8s-app: config-management-operator
      component: config-management-operator
  template:
    metadata:
      labels:
        k8s-app: config-management-operator
        component: config-management-operator
    spec:
      containers:
      - command:
        - /manager
        - --private-registry=
        name: manager
        image: gcr.io/config-management-release/config-sync-operator:20210513004147-op-cs
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
          limits:
            cpu: 1
            memory: 2Gi
        envFrom:
        - configMapRef:
            name: operator-environment-options
            optional: true
      serviceAccount: config-management-operator
---
apiVersion: v1
kind: Namespace
metadata:
  name: config-management-system
  labels:
    configmanagement.gke.io/system: "true"
---
apiVersion: v1
kind: Namespace
metadata:
  name: config-management-monitoring
  labels:
    configmanagement.gke.io/system: "true"
